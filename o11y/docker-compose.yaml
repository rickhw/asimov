version: '3.8'
services:

  search_elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - net1
    restart: always

  dashboard_kibana:
    image: docker.elastic.co/kibana/kibana:8.16.1
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://search_elasticsearch:9200
      - xpack.security.enabled=false
    depends_on:
      - search_elasticsearch
    networks:
      - net1
    restart: always

  metric_prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - net1
    restart: always

  dashboard_grafana:
    image: grafana/grafana:10.1.0
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    networks:
      - net1
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    restart: always

  # logshipper_webapi-filebeat:
  #   image: docker.elastic.co/beats/filebeat:7.17.26
  #   volumes:
  #     - ./asimov-webapi/filebeat.yml:/usr/share/filebeat/filebeat.yml
  #     - ./asimov-webapi/logs:/logs
  #   depends_on:
  #     - search_elasticsearch
  #   networks:
  #     - net1
  #   restart: always

  # node-exporter:
  #   image: prom/node-exporter:latest
  #   ports:
  #     - "9100:9100"
  #   networks:
  #     - net1
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.sysfs=/host/sys'
  #     - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
  #   restart: always

networks:
  net1:
    driver: bridge